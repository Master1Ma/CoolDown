cmake_minimum_required(VERSION 2.6)
PROJECT( CoolDown-Public-ClientProto )
SET( LIB_NAME "client_proto" )
SET_PROPERTY( GLOBAL PROPERTY LIB_CLIENT_PROTO_FULLNAME ${CMAKE_SHARED_LIBRARY_PREFIX}${LIB_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX})
SET_PROPERTY( GLOBAL PROPERTY LIB_CLIENT_PROTO_INCLUDE ${CMAKE_CURRENT_SOURCE_DIR}/include )

IF( NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/include )
    FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include)
ENDIF()

IF( NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/src )
    FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src)
ENDIF()

INCLUDE_DIRECTORIES( include )
execute_process(COMMAND ln -Ff ${CMAKE_SOURCE_DIR}/proto/client.pb.h
    ${CMAKE_CURRENT_SOURCE_DIR}/include/client.pb.h)
execute_process(COMMAND ln -Ff ${CMAKE_SOURCE_DIR}/proto/client.pb.cc
    ${CMAKE_CURRENT_SOURCE_DIR}/src/client.pb.cc)

FIND_LIBRARY(POCO_FOUNDATION PocoFoundation)
FIND_LIBRARY(POCO_NET PocoNet)
FIND_LIBRARY(POCO_UTIL PocoUtil)
FIND_LIBRARY(PROTOBUF protobuf)

AUX_SOURCE_DIRECTORY( src DIR_SRCS )
ADD_LIBRARY( ${LIB_NAME} SHARED ${DIR_SRCS} )
TARGET_LINK_LIBRARIES( ${LIB_NAME} ${POCO_FOUNDATION} ${POCO_NET} ${POCO_UTIL}
    ${PROTOBUF} )
